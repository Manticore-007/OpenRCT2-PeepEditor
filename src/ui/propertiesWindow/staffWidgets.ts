import { margin, toolbarHeight, widgetLineHeight, windowColour, selectedPeep, groupboxName } from "../../helpers/windowProperties";
import { costumeList } from "../../enums/costumes";
import { staffTypeList } from "../../enums/staffTypes";
import { multiplierList, setMultiplier } from "../../helpers/windowProperties";
import { changeStaffCoordinatesExecuteArgs } from "../../gameActions/staffChangeCoordinates";
import { changeStaffTypeExecuteArgs } from "../../gameActions/staffChangeType";
import { changeStaffCostumeExecuteArgs } from "../../gameActions/staffChangeCostume";

export const staffWidgets: WidgetBaseDesc[] = [
    <GroupBoxDesc>{
        type: "groupbox",
        name: "groupbox-staff-colour",
        text: "Colour",
        x: margin,
        y: margin + toolbarHeight,
        height: widgetLineHeight * 2.5,
        width: 200 - margin * 2,
    },
    <ColourPickerDesc> {
        type: "colourpicker",
        name: "colourpicker-staff",
        x: 200 - margin - widgetLineHeight * 2,
        y: margin + toolbarHeight + widgetLineHeight * 2 / 2.5 + 2,
        height: widgetLineHeight,
        width: widgetLineHeight,
        colour: windowColour,
        onChange: (number) => { const staff = <Staff>selectedPeep; staff.colour = number;},
    },
    <GroupBoxDesc>{
        type: "groupbox",
        name: "groupbox-appearance",
        text: "Appearance",
        x: margin,
        y: margin * 2 + toolbarHeight * 4,
        height: widgetLineHeight * 4,
        width: 200 - margin * 2,
    },
    <LabelDesc> {
        type: "label",
        name: "label-staff-type",
        x: margin + toolbarHeight,
        y: margin * 2 + toolbarHeight * 5.5,
        height: widgetLineHeight,
        width: groupboxName.width - margin * 2,
        text: "Type: ",
    },
    <DropdownDesc> {
        type: "dropdown",
        name: "dropdown-staff-type",
        x: margin + 80,
        y: margin * 2 + toolbarHeight * 5.5,
        height: widgetLineHeight,
        width: 95,
        items: staffTypeList,
        selectedIndex: -1,
        onChange: (number: number) => context.executeAction("pe_changestafftype", changeStaffTypeExecuteArgs(<Staff>selectedPeep, number)),
    },
    <LabelDesc> {
        type: "label",
        name: "label-costume",
        x: margin + toolbarHeight,
        y: margin * 2 + toolbarHeight * 7.25,
        height: widgetLineHeight,
        width: groupboxName.width - margin * 2,
        text: "Costume: ",
    },
    <DropdownDesc> {
        type: "dropdown",
        name: "dropdown-costume",
        x: margin + 80,
        y: margin * 2 + toolbarHeight * 7.25,
        height: widgetLineHeight,
        width: 95,
        items: costumeList,
        selectedIndex: -1,
        onChange: (number) => context.executeAction("pe_changestaffcostume", changeStaffCostumeExecuteArgs(<Staff>selectedPeep, number)),
    },
    <GroupBoxDesc>{
        type: "groupbox",
        name: "groupbox-coordinates",
        text: "Coordinates",
        x: margin,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 3.5 - 2,
        height: widgetLineHeight * 7.5 - margin + 3,
        width: 200 - margin * 2,
    },
    <LabelDesc>{
        type: "label",
        name: "label-x-position",
        x: margin + toolbarHeight,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 4.5,
        height: widgetLineHeight,
        width: groupboxName.width - margin * 2,
        text: "X position: ",
    },
    <SpinnerDesc>{
        type: "spinner",
        name: "spinner-x-position",
        x: margin + 80,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 4.5,
        height: widgetLineHeight,
        width: 95,
        text: ` `,
        onIncrement: () => context.executeAction("pe_changestaffcoordinates", changeStaffCoordinatesExecuteArgs(<Staff>selectedPeep, "x", + 1)),
        onDecrement: () => context.executeAction("pe_changestaffcoordinates", changeStaffCoordinatesExecuteArgs(<Staff>selectedPeep, "x", - 1)),
    },
    <LabelDesc>{
        type: "label",
        name: "label-y-position",
        x: margin + toolbarHeight,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 5.75,
        height: widgetLineHeight,
        width: groupboxName.width - margin * 2,
        text: "Y position: ",
    },
    <SpinnerDesc>{
        type: "spinner",
        name: "spinner-y-position",
        x: margin + 80,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 5.75,
        height: widgetLineHeight,
        width: 95,
        text: ` `,
        onIncrement: () => context.executeAction("pe_changestaffcoordinates", changeStaffCoordinatesExecuteArgs(<Staff>selectedPeep, "y", + 1)),
        onDecrement: () => context.executeAction("pe_changestaffcoordinates", changeStaffCoordinatesExecuteArgs(<Staff>selectedPeep, "y", - 1)),
    },
    <LabelDesc>{
        type: "label",
        name: "label-z-position",
        x: margin + toolbarHeight,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 7,
        height: widgetLineHeight,
        width: groupboxName.width - margin * 2,
        text: "Z position: ",
    },
    <SpinnerDesc>{
        type: "spinner",
        name: "spinner-z-position",
        x: margin + 80,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 7,
        height: widgetLineHeight,
        width: 95,
        text: ` `,
        onIncrement: () => context.executeAction("pe_changestaffcoordinates", changeStaffCoordinatesExecuteArgs(<Staff>selectedPeep, "z", + 1)),
        onDecrement: () => context.executeAction("pe_changestaffcoordinates", changeStaffCoordinatesExecuteArgs(<Staff>selectedPeep, "z", - 1)),
    },
    <GroupBoxDesc>{
        type: "groupbox",
        name: "groupbox-multiplier",
        x: margin,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 8.5 - 1,
        height: widgetLineHeight * 2.5 - margin + 2,
        width: 200 - margin * 2,
    },
    <LabelDesc>{
        type: "label",
        name: "label-multiplier",
        x: margin + toolbarHeight,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 9.25,
        height: widgetLineHeight,
        width: groupboxName.width - margin * 2,
        text: "Multiplier: ",
    },
    <DropdownDesc>{
        type: "dropdown",
        name: "dropdown-multiplier",
        x: margin + 80,
        y: margin * 2 + toolbarHeight * 5 + widgetLineHeight * 9.25,
        height: widgetLineHeight,
        width: 95,
        items: multiplierList,
        selectedIndex: 0,
        isDisabled: false,
        onChange: (number) => setMultiplier(number),
    }
];